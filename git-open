#!/bin/bash

# Opens the github page for a repo/branch in your browser.
# https://github.com/paulirish/git-open/
#
# git open
# git open [remote] [branch]

# are we in a git repo?
if ! git rev-parse --is-inside-work-tree &> /dev/null; then
    echo "Not a git repository."
    exit 1
fi

# get current branch
branch="$2"
if [ -z "$branch" ]; then branch=$(git symbolic-ref -q --short HEAD); fi

# Assume upstream remote or 'origin' if none is provided
remote="$1"
if [ -z "$remote" ]; then remote=$(git config branch.$branch.remote); fi
if [ -z "$remote" ]; then remote="origin"; fi

giturl=$(git config remote.$remote.url)
if [ -z "$giturl" ]; then
    echo "Unknown remote $remote."
    exit 1
fi

# URL normalization
# bitbucket 
if grep -q bitbucket <<<$giturl; then
    giturl=${giturl/git\@bitbucket\.org\:/https://bitbucket.org/}
    providerUrlDifference=branch
# Atlassian Stash
elif grep -q "/scm/" <<<$giturl; then
  re='(.*)/scm/(.*)/(.*)\.git'
  if [[ $giturl =~ $re ]]; then
    giturl=${BASH_REMATCH[1]}/projects/${BASH_REMATCH[2]}/repos/${BASH_REMATCH[3]}
    providerUrlDifference=browse
    branch="?at=refs%2Fheads%2F${branch}"
  fi
else
  # Custom GitLab
  gitlab_domain=$(git config --get gitopen.gitlab.domain)
  if [ ! -z "$gitlab_domain" ]; then
    if grep -q $gitlab_domain <<<$giturl; then
      giturl=${giturl/git\@${gitlab_domain}:/https://${gitlab_domain}/}
      providerUrlDifference=tree
    fi
  # Hosted GitLab
  elif grep -q gitlab <<<$giturl; then
    giturl=${giturl/git\@gitlab\.com\:/https://gitlab.com/}
    providerUrlDifference=tree
  # Assume it's a GitHub repo (either in github.com or a GitHub Enterprise server)
  else
    giturl=$(sed 's/^git@\([^:]*\):\(.*\)/https:\/\/\1\/\2/' <<< $giturl)
    providerUrlDifference=tree
  fi
fi
giturl=${giturl%\.git}

if [ ! -z "$branch" ]
then
    giturl="${giturl}/${providerUrlDifference}/${branch}"
fi

# simplify URL for master
giturl=${giturl/tree\/master/}

# get current open browser command
case $( uname -s ) in
Darwin)  open=open;;
MINGW*)  open=start;;
CYGWIN*) open=cygstart;;
*)       open=xdg-open;;
esac

# open it in a browser
$open $giturl &> /dev/null
exit 0
